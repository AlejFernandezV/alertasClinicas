/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _INTERFACE1_H_RPCGEN
#define _INTERFACE1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXNOM 20
#define MAXAPEL 20

struct sensores {
	int frecuencia_cardiaca;
	int tension_arterial[2];
	int frecuencia_respiratoria;
	int saturacion_oxigeno;
	float temperatura;
};
typedef struct sensores sensores;

struct paciente_C_SA {
	int numeroHabitacion;
	char nombre[MAXNOM];
	char apellido[MAXAPEL];
	int edad;
	sensores valoresPaciente;
};
typedef struct paciente_C_SA paciente_C_SA;

#define enviar_datos_pacientes 0x20000001
#define enviar_datos_pacientes_1 2

#if defined(__STDC__) || defined(__cplusplus)
#define enviarDatosPacientes 1
extern  bool_t * enviardatospacientes_2(paciente_C_SA *, CLIENT *);
extern  bool_t * enviardatospacientes_2_svc(paciente_C_SA *, struct svc_req *);
extern int enviar_datos_pacientes_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define enviarDatosPacientes 1
extern  bool_t * enviardatospacientes_2();
extern  bool_t * enviardatospacientes_2_svc();
extern int enviar_datos_pacientes_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_sensores (XDR *, sensores*);
extern  bool_t xdr_paciente_C_SA (XDR *, paciente_C_SA*);

#else /* K&R C */
extern bool_t xdr_sensores ();
extern bool_t xdr_paciente_C_SA ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_INTERFACE1_H_RPCGEN */
